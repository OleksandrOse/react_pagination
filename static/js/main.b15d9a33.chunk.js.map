{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","numberOfPages","setSearchParams","nextPage","pageChangeHandler","page","className","classNames","disabled","onClick","map","active","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","navigate","useNavigate","useSearchParams","searchParams","get","perPageSize","length","startOfPage","endOfPage","partOfItems","useEffect","Number","onChangePerPage","pageSize","id","value","onChange","event","currentTarget","htmlFor","item","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.b15d9a33.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (number: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const numberOfPages = getNumbers(1, totalPages);\n\n  const setSearchParams = (nextPage: number) => {\n    if (nextPage < 1) {\n      return `?page=${1}&perPageSize=${perPage}`;\n    }\n\n    if (nextPage > totalPages) {\n      return `?page=${totalPages}&perPageSize=${perPage}`;\n    }\n\n    return `?page=${nextPage}&perPageSize=${perPage}`;\n  };\n\n  const pageChangeHandler = (page: number) => {\n    if (page > totalPages || page < 1 || page === currentPage) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n      >\n        <Link\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          to={setSearchParams(currentPage - 1)}\n          aria-disabled={currentPage === 1}\n          onClick={() => pageChangeHandler(currentPage - 1)}\n        >\n          «\n        </Link>\n      </li>\n      {numberOfPages.map((page: number) => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            {\n              active: page === currentPage,\n            },\n          )}\n        >\n          <Link\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            to={setSearchParams(page)}\n            onClick={() => pageChangeHandler(page)}\n          >\n            {page}\n          </Link>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === totalPages,\n          },\n        )}\n      >\n        <Link\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          to={setSearchParams(currentPage + 1)}\n          aria-disabled={currentPage === totalPages}\n          onClick={() => pageChangeHandler(currentPage - 1)}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const page = searchParams.get('page') || 1;\n  const perPageSize = searchParams.get('perPageSize') || 5;\n\n  const total = items.length;\n  const startOfPage = currentPage * itemsPerPage - itemsPerPage;\n  const endOfPage = currentPage * itemsPerPage > total\n    ? total\n    : currentPage * itemsPerPage;\n  const partOfItems = getNumbers(startOfPage + 1, endOfPage).map(n => `Item ${n}`);\n\n  useEffect(() => {\n    setItemsPerPage(Number(perPageSize));\n    setCurrentPage(Number(page));\n  }, [perPageSize, page]);\n\n  const onChangePerPage = (pageSize: number) => {\n    navigate(`?page=${1}&perPageSize=${pageSize}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startOfPage + 1} - ${endOfPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              onChangePerPage(Number(event.currentTarget.value));\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onChangePerPage}\n      />\n\n      <ul>\n        {partOfItems.map((item) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/*\" element={<App />} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}